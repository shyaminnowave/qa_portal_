{"version":3,"file":"static/js/174.db472041.chunk.js","mappings":"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","sources":["component/testcaseCheckbox/TestCaseCheckbox.js","component/dropdownreport/ReportDropDown.js","component/multilinechart/MultiLineChart.js","component/overviewReport/overviewStats/OverviewStats.js"],"sourcesContent":["import React, { useState ,useEffect} from \"react\";\r\nimport \"./TestCasecheckbox.scss\";\r\nfunction TestCaseCheckbox({ onSelectedTestCasesChange }) {\r\n  const testCases = [\r\n    \"Test Case 1\",\r\n    \"Test Case 2\",\r\n    \"Test Case 3\",\r\n    \"Test Case 4\",\r\n    \"Test Case 6\",\r\n    \"Test Case 7\",\r\n    \"Test Case 8\",\r\n    \"Test Case 9\",\r\n    \"Test Case 10\",\r\n    \"Test Case 11\",\r\n    \"Test Case 12\",\r\n  ];\r\n  const colors = [\r\n    \"#FF5733\", // Vibrant Red\r\n    \"#33FF57\", // Vibrant Green\r\n    \"#3357FF\", // Vibrant Blue\r\n    \"#FF33A1\", // Vibrant Pink\r\n    \"#A133FF\", // Vibrant Purple\r\n    \"#33FFF5\", // Vibrant Cyan\r\n    \"#FFAA33\", // Vibrant Orange\r\n    \"#33FFAA\", // Vibrant Mint\r\n    \"#FF3333\", // Bright Red\r\n    \"#33FF33\", // Bright Green\r\n    \"#3333FF\", // Bright Blue\r\n    \"#FF5733\"  // Vibrant Red again (as a fallback if more colors are needed)\r\n  ];\r\n\r\n  const testCasesWithColors = testCases.map((testCase, index) => ({\r\n    testCase,\r\n    color: colors[index % colors.length]\r\n  }));\r\n  \r\n  console.log(testCasesWithColors)\r\n  \r\n  const [checkedState, setCheckedState] = useState(\r\n    new Array(testCasesWithColors.length).fill(false)\r\n  );\r\n\r\n  const handleOnChange = (position) => {\r\n    const updatedCheckedState = checkedState.map((item, index) =>\r\n      index === position ? !item : item\r\n    );\r\n     console.log(updatedCheckedState);\r\n    setCheckedState(updatedCheckedState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const selectedTestCases = testCasesWithColors.filter((_, index) => checkedState[index]);\r\n    onSelectedTestCasesChange(selectedTestCases);\r\n  }, [checkedState]);\r\n  return (\r\n    <div className=\"testcase-box\">\r\n      <h4>Test Cases</h4>\r\n      <div className=\"box-list\">\r\n        {testCasesWithColors.map((testCase, index) => {\r\n          \r\n          return (\r\n            \r\n            <div className=\"check-box\" key={index}>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={`checkbox-${index}`}\r\n                name={testCase}\r\n                value={testCase}\r\n                checked={checkedState[index]}\r\n                onChange={() => handleOnChange(index)}\r\n              />\r\n              <label htmlFor={`checkbox-${index}`}>{testCase.testCase} {checkedState[index] && <span style={{ backgroundColor: `${testCase.color}` }}></span>}  </label>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TestCaseCheckbox;\r\n","import React,{useState} from 'react'\r\nimport './ReportDropDown.scss'\r\nimport { GoChevronDown,  GoChevronUp } from \"react-icons/go\";\r\n\r\n\r\n\r\nfunction ReportDropDown({options,onSelect,option}) {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [selectedOption, setSelectedOption] = useState(option);\r\n  \r\n    const handleToggle = () => setIsOpen(!isOpen);\r\n  \r\n    const handleOptionClick = (option) => {\r\n      setSelectedOption(option);\r\n      setIsOpen(false);\r\n      onSelect(option);\r\n    };\r\n  \r\n    return (\r\n      <div className=\"dropdown\">\r\n        <button className=\"dropdown-toggle\" onClick={handleToggle}>\r\n          {selectedOption } {isOpen ? <GoChevronUp />: <GoChevronDown/>}\r\n        </button>\r\n        {isOpen && (\r\n          <ul className=\"dropdown-menu\">\r\n            {options.map((option, index) => (\r\n              <li key={index} className=\"dropdown-item\" onClick={() => handleOptionClick(option)}>\r\n                {option}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default ReportDropDown","// MultiLineChart.js\r\nimport React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Filler,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport \"./MultiLineChart.scss\"\r\n\r\n// Register required components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Filler,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst MultiLineChart = ({dataList,list}) => {\r\n  console.log(list , \"list from props\")\r\n  console.log(dataList)\r\n  const baseDataset = dataList.map(d => d.avgLoadTime);\r\n  const data = [\r\n    { build: \"HR MR2.8.1 A12 - bc5\", avgLoadTime: 1.3 },\r\n    { build: \"HR MR2.8.1 A12 - ab2\", avgLoadTime: 0.5 },\r\n    { build: \"HR MR2.8 A12 - bc5\", avgLoadTime: 2.4 },\r\n    { build: \"HR MR2.8 A12 - ab2\", avgLoadTime: 2.6 },\r\n    { build: \"HR MR2.5 A10 - bc5\", avgLoadTime: 3.0 },\r\n    { build: \"AT ONSITE MR4.6 A12 - 46d\", avgLoadTime: 1.8 },\r\n    { build: \"AT ONSITE MR4.5 A12 - 46d\", avgLoadTime: 1.9 },\r\n    { build: \"AT ONSITE MR4.4 A12 - 46d\", avgLoadTime: 2.0 },\r\n    { build: \"AT ONSITE MR2.8.1 A12 - 46d\", avgLoadTime: 2.1 },\r\n    { build: \"AT MR4.6 A12 -757\", avgLoadTime: 1.7 },\r\n    { build: \"AT MR4.5 A12 -757\", avgLoadTime: 1.6 },\r\n    { build: \"AT MR4.4 A12 -757\", avgLoadTime: 1.5 },\r\n    { build: \"AT MR2.8.1 A12 - d5c\", avgLoadTime: 2.2 },\r\n    { build: \"AT MR2.7.02 A12 - d5c\", avgLoadTime: 2.8 },\r\n    { build: \"AT MR2.6 A12 - 914\", avgLoadTime: 2.9 },\r\n    { build: \"AT MR2.6 A10 -757\", avgLoadTime: 3.1 },\r\n    { build: \"HU SDMC MR2.9 A10 - b3e\", avgLoadTime: 1.4 },\r\n    { build: \"HU ONSITE SDMC MR4.5 A12 - b3a\", avgLoadTime: 1.3 },\r\n    { build: \"HU ONSITE SDMC MR2.9.13 A12 - b3a\", avgLoadTime: 1.2 },\r\n    { build: \"HU SEI MR2.9 A12 - ab2\", avgLoadTime: 2.7 },\r\n    { build: \"HU SEI MR2.9.13 A12 - d2e\", avgLoadTime: 2.9 },\r\n    { build: \"HU SEI MR4.5 A12 - d2e\", avgLoadTime: 3.2 },\r\n    { build: \"PL MR4.4 A10 - b3e\", avgLoadTime: 1.0 },\r\n    { build: \"PL MR4.5 A10 - b3e\", avgLoadTime: 1.1 },\r\n    { build: \"PL MR2.6 A10 - 8d8\", avgLoadTime: 3.3 },\r\n    { build: \"PL MR4.4 A10 - ab2\", avgLoadTime: 3.4 },\r\n  ];\r\n\r\n  // Extract builds and avgLoadTimes for the chart\r\n  const labels = dataList.map((item) => item.build);\r\n  const dataset1 = dataList.map((item) => item.avgLoadTime);\r\n\r\n  // Create dummy datasets\r\n  const dataset2 = dataset1.map(\r\n    (loadTime) => loadTime + (Math.random() * 0.5 - 0.5)\r\n  ); // Slightly varied\r\n  const dataset3 = dataset1.map(\r\n    (loadTime) => loadTime + (Math.random() * 0.5 - 0.5)\r\n  ); // Slightly varied\r\n  \r\n  const datasets = list.map((testCase, index) => ({\r\n    label: testCase.testCase,\r\n    data: baseDataset.map(loadTime => loadTime + (Math.random() * 0.5 - 0.5)),\r\n    borderColor: testCase.color,\r\n    fill: false,\r\n    backgroundColor:testCase.color,\r\n        borderWidth:2,\r\n        pointRadius: 0, \r\n        pointHoverRadius: 4, \r\n        tension: 0.3,\r\n  }));\r\n   console.log(datasets);\r\n  const chartData = {\r\n    labels: dataList.map(d => d.build),\r\n    datasets\r\n   \r\n  };\r\n\r\n  console.log(chartData)\r\n\r\n  const options = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: true,\r\n        position: \"top\",\r\n        labels: {\r\n          usePointStyle: true, // Use custom point style\r\n          pointStyle: 'circle', // Change to 'circle', 'rect', 'star', etc.\r\n          font: {\r\n            size: 12,\r\n            family: 'Arial',\r\n            style: 'normal',\r\n            weight: 'bold',\r\n          },\r\n          color: 'black', // Change legend font color\r\n        },\r\n      },\r\n      // title: {\r\n      //   display: true,\r\n      //   text:\"Percentile 75(sec) of load time\",\r\n      // },\r\n      tooltip: {\r\n        enabled: true,\r\n        mode: \"index\", // Show tooltip for the nearest data point on the x-axis\r\n        intersect: false, // Allow the tooltip to show even when not intersecting a point\r\n        backgroundColor: '#B1BCD1', // Tooltip background color\r\n        titleColor: '#ffffff', // Tooltip title color\r\n        bodyColor: '#ffffff', // Tooltip body color\r\n        borderColor: '#ffffff', // Tooltip border color\r\n        borderWidth: 1, \r\n      },\r\n     \r\n      filler: {\r\n        propagate: true\r\n      }\r\n    },\r\n\r\n    hover: {\r\n      mode: \"index\", // Show hover effect for the nearest data point on the x-axis\r\n      intersect: false, // Allow hover effects even when not intersecting a point\r\n    },\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: false,\r\n          text: \"Build Versions\",\r\n          font: {\r\n            size: 12, // Font size\r\n            color:\"black\",\r\n            weight: 'bold', // Font weight\r\n          },\r\n          color:\"black\",\r\n        },\r\n        offset: true, \r\n        grid: {\r\n          display: false, // Hide x-axis grid lines\r\n        },\r\n        \r\n        ticks: {\r\n          \r\n          color: \"black\" ,\r\n          font: {\r\n            size: 9, // Decrease the font size for the x-axis labels\r\n          },\r\n          minRotation: 0,\r\n          maxRotation: 0,\r\n          stepSize: 1,\r\n          autoSkip: false, // Ensure all labels are shown\r\n          autoSkip: false, // Show all labels\r\n          padding: 20,\r\n        },\r\n        categoryPercentage: 0.2, // Adjust this value to increase/decrease spacing\r\n        barPercentage: 1.0, // Adjust this value to increase/decrease spacing\r\n        padding:20\r\n      },\r\n      y: {\r\n        title: {\r\n          display: false,\r\n          text: \"Time(s)\",\r\n          font: {\r\n            size: 12, // Font size\r\n            color:\"black\",\r\n            weight: 'bold', // Font weight\r\n          },\r\n          color:\"black\",\r\n        },\r\n       \r\n        ticks: {\r\n          font: {\r\n            size: 9, // Decrease the font size for the y-axis labels\r\n          },\r\n        },\r\n        beginAtZero: false,\r\n        grid: {\r\n          display: false, // Hide x-axis grid lines\r\n          borderDash: [5, 5], // Dashed grid lines, // This makes the grid lines dashed\r\n        },\r\n        padding:20\r\n      },\r\n    },\r\n  };\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"multiline\">\r\n     \r\n      <Line data={chartData} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultiLineChart;\r\n","import React, { useState ,useEffect } from \"react\";\r\nimport \"./OverviewStats.scss\";\r\nimport TestCaseCheckbox from \"../../testcaseCheckbox/TestCaseCheckbox\";\r\nimport LineChart from \"../../Report/chart/LineChart\";\r\nimport LineChartTestStats from \"../../ReportInterface/testcaseStats/linecharttestcasestats/LineChartTestStats\";\r\nimport DropDown from \"../../dropdowncutsom/DropDown\";\r\nimport DropDownAction from \"../../dropdownAction/DropDownAction\";\r\nimport ReportDropDown from \"../../dropdownreport/ReportDropDown\";\r\nimport LineChartD3 from \"../../D3/LineChartD3\";\r\nimport MultiLineChart from \"../../multilinechart/MultiLineChart\";\r\n\r\nfunction OverviewStats() {\r\n  const data = [\r\n    { build: \"HR MR2.8.1 A12 - bc5\", avgLoadTime: 2.3 },\r\n    { build: \"HR MR2.8.1 A12 - ab2\", avgLoadTime: 2.5 },\r\n    { build: \"HR MR2.8 A12 - bc5\", avgLoadTime: 2.4 },\r\n    { build: \"HR MR2.8 A12 - ab2\", avgLoadTime: 2.6 },\r\n    { build: \"HR MR2.5 A10 - bc5\", avgLoadTime: 3.0 },\r\n    { build: \"AT ONSITE MR4.6 A12 - 46d\", avgLoadTime: 1.8 },\r\n    { build: \"AT ONSITE MR4.5 A12 - 46d\", avgLoadTime: 1.9 },\r\n    { build: \"AT ONSITE MR4.4 A12 - 46d\", avgLoadTime: 2.0 },\r\n    { build: \"AT ONSITE MR2.8.1 A12 - 46d\", avgLoadTime: 2.1 },\r\n    { build: \"AT MR4.6 A12 -757\", avgLoadTime: 1.7 },\r\n    { build: \"AT MR4.5 A12 -757\", avgLoadTime: 1.6 },\r\n    { build: \"AT MR4.4 A12 -757\", avgLoadTime: 1.5 },\r\n    { build: \"AT MR2.8.1 A12 - d5c\", avgLoadTime: 2.2 },\r\n    { build: \"AT MR2.7.02 A12 - d5c\", avgLoadTime: 2.8 },\r\n    { build: \"AT MR2.6 A12 - 914\", avgLoadTime: 2.9 },\r\n    { build: \"AT MR2.6 A10 -757\", avgLoadTime: 3.1 },\r\n    { build: \"HU SDMC MR2.9 A10 - b3e\", avgLoadTime: 1.4 },\r\n    { build: \"HU ONSITE SDMC MR4.5 A12 - b3a\", avgLoadTime: 1.3 },\r\n    { build: \"HU ONSITE SDMC MR2.9.13 A12 - b3a\", avgLoadTime: 1.2 },\r\n    { build: \"HU SEI MR2.9 A12 - ab2\", avgLoadTime: 2.7 },\r\n    { build: \"HU SEI MR2.9.13 A12 - d2e\", avgLoadTime: 2.9 },\r\n    { build: \"HU SEI MR4.5 A12 - d2e\", avgLoadTime: 3.2 },\r\n    { build: \"PL MR4.4 A10 - b3e\", avgLoadTime: 1.0 },\r\n    { build: \"PL MR4.5 A10 - b3e\", avgLoadTime: 1.1 },\r\n    { build: \"PL MR2.6 A10 - 8d8\", avgLoadTime: 3.3 },\r\n    { build: \"PL MR4.4 A10 - ab2\", avgLoadTime: 3.4 },\r\n  ];\r\n  const handleSelect = (option) => {\r\n    console.log(`Selected: ${option}`);\r\n    setSelectedOption(option);\r\n  };\r\n\r\n  const handleSelectOne =(option) =>{\r\n    setSelectedOptionOne(option)\r\n  }\r\n  const [selectedOption, setSelectedOption] = useState(\"Load Time\");\r\n  const [selectedTestCases, setSelectedTestCases] = useState([]);\r\n  const [selectOptionOne,setSelectedOptionOne]=useState(\"ALL\")\r\n\r\n  const handleSelectedTestCasesChange = (selectedTestCases) => {\r\n    setSelectedTestCases(selectedTestCases);\r\n  };\r\n  const[dataList,setDataList]=useState(data);\r\n\r\n  useEffect(() => {\r\n    if(selectOptionOne===\"ALL\"){\r\n      setDataList(data)\r\n    }\r\n    else{\r\n    const filtered = data.filter(d => d.build.startsWith(selectOptionOne));\r\n    console.log(filtered);\r\n    setDataList(filtered);\r\n    }\r\n  }, [selectOptionOne]);\r\n \r\n\r\n  const renderChart = () => {\r\n    switch (selectedOption) {\r\n      case \"Load Time\":\r\n        return <MultiLineChart dataList={dataList} list={selectedTestCases} />;\r\n      case \"CPU Usage\":\r\n        return <MultiLineChart dataList={dataList} list={selectedTestCases} />;\r\n      case \"RAM Usage\":\r\n        return <MultiLineChart dataList={dataList} list={selectedTestCases} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"overview-stats\">\r\n      <div className=\"inner-overview-stats\">\r\n        <div className=\"list-and-chart\">\r\n          <div className=\"test-list\">\r\n            <TestCaseCheckbox\r\n              onSelectedTestCasesChange={handleSelectedTestCasesChange}\r\n            />\r\n          </div>\r\n          <div className=\"linechart-section\">\r\n            {/* <LineChart /> */}\r\n            <div className=\"heading-dropdown\">\r\n              <h4>Chart</h4>\r\n              <div className=\"drop-downs\">\r\n                <ReportDropDown\r\n                  options={[\"ALL\",\"AT\", \"PL\", \"HU\" ,\"HR\" ,\"ME\" ,\"MKT\"]}\r\n                  onSelect={handleSelectOne}\r\n                  option={selectOptionOne}\r\n                  \r\n                />\r\n                <ReportDropDown\r\n                  options={[\"Load Time\", \"CPU Usage\", \"RAM Usage\"]}\r\n                  onSelect={handleSelect}\r\n                  option={selectedOption}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"charts-section-stats\">\r\n              {/* <MultiLineChart list={selectedTestCases} /> */}\r\n              {renderChart()}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"table-info\">\r\n          <div className=\"inner-table-box\">\r\n            <div className=\"table-heading\">\r\n              <h4>Tables</h4>\r\n            </div>\r\n            <div className=\"table-content\">\r\n              <div className=\"column-info\"></div>\r\n              <div className=\"table-row\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OverviewStats;\r\n"],"names":["_ref","onSelectedTestCasesChange","colors","testCasesWithColors","map","testCase","index","color","length","console","log","checkedState","setCheckedState","useState","Array","fill","useEffect","selectedTestCases","filter","_","_jsxs","className","children","_jsx","type","id","concat","name","value","checked","onChange","position","updatedCheckedState","item","handleOnChange","htmlFor","style","backgroundColor","options","onSelect","option","isOpen","setIsOpen","selectedOption","setSelectedOption","onClick","handleToggle","GoChevronUp","GoChevronDown","handleOptionClick","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Filler","Tooltip","Legend","dataList","list","baseDataset","d","avgLoadTime","dataset1","build","datasets","loadTime","Math","random","label","data","borderColor","borderWidth","pointRadius","pointHoverRadius","tension","chartData","labels","Line","responsive","maintainAspectRatio","plugins","legend","display","usePointStyle","pointStyle","font","size","family","weight","tooltip","enabled","mode","intersect","titleColor","bodyColor","filler","propagate","hover","scales","x","title","text","offset","grid","ticks","minRotation","maxRotation","stepSize","autoSkip","padding","categoryPercentage","barPercentage","y","beginAtZero","borderDash","setSelectedTestCases","selectOptionOne","setSelectedOptionOne","setDataList","filtered","startsWith","TestCaseCheckbox","ReportDropDown","renderChart","MultiLineChart"],"sourceRoot":""}