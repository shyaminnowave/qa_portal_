{"version":3,"file":"static/js/791.825f89cf.chunk.js","mappings":"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","sources":["component/RoleManagement/RoleManagement.js"],"sourcesContent":["import React,{useEffect, useState} from \"react\";\r\nimport \"./RoleManagement.scss\";\r\nimport axiosWithAuth from \"../../utils/axiosClienttok\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getListofRoles ,getListOfPermissions } from \"../../Redux/Roleandpermissionreducer/RoleAndPermissionReducer\";\r\nimport UpdateRole from \"./updateRoles/UpdateRole\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nfunction RoleManagement() {\r\n    \r\n    const roles=useSelector((state)=>state.RoleAndPermissionReducer.roles);\r\n    const permissions=useSelector((state)=>state.RoleAndPermissionReducer.permissions);\r\n    const dispatch=useDispatch();\r\n\r\n    const[create,setCreate]=useState(false);\r\n    const[update,setUpdate]=useState(false);\r\n    const[createRole,setCreateRole]=useState('');\r\n    const [selectedRole, setSelectedRole] = useState('');\r\n    const [selectedPermissions, setSelectedPermissions] = useState([]);\r\n\r\n    useEffect(()=>{\r\n      dispatch(getListofRoles());\r\n      dispatch(getListOfPermissions());\r\n    },[])\r\n\r\n    const handleRoleChange = (e) => {\r\n      setSelectedRole(e.target.value);\r\n    };\r\n\r\n    const handleOpenCreate=()=>{\r\n        setCreate(true);\r\n        setUpdate(false);\r\n    }\r\n\r\n    const handleOpenUpdate=()=>{\r\n        setUpdate(true);\r\n        setCreate(false);\r\n    }\r\n\r\n  \r\n\r\n  const handleAddPermission = (permission) => {\r\n    if (!selectedPermissions.includes(permission)) {\r\n      setSelectedPermissions([...selectedPermissions, permission]);\r\n    } else {\r\n      setSelectedPermissions(selectedPermissions.filter(item => item !== permission));\r\n    }\r\n  };\r\n\r\n  async function handleCreateRole(e){\r\n    e.preventDefault()\r\n    const ids = selectedPermissions?.map(entry => entry.id);\r\n    try {\r\n      const response=await axiosWithAuth.post('/create-group/',{name:createRole,permissions:ids});\r\n      console.log(response);\r\n      if(response?.data?.success===true){\r\n        toast.success('Role created');\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error('Error');\r\n    }\r\n    finally{\r\n      setCreate(false);\r\n      setSelectedPermissions([]);\r\n      dispatch(getListofRoles());\r\n    }\r\n\r\n  }\r\n  \r\n  return (\r\n    <div className=\"role_mangement\">\r\n      <div className=\"inner_role_mangement\">\r\n        <div className=\"roles\">\r\n          <table border={1}>\r\n            <tbody>\r\n              <tr className=\"column_name\">\r\n                <th>Role</th>\r\n              </tr>\r\n              \r\n               { roles && roles?.map((item,index)=>(\r\n                  <tr className=\"column_value\" key={index}>\r\n                    <th>{item?.name}</th>\r\n                  </tr>\r\n               ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className=\"create_edit\">\r\n          <div className=\"button\">\r\n            <button className={create? \"colour\":\"normal\"} onClick={handleOpenCreate}>Create Role</button>\r\n            <button className={update? \"colour\":\"normal\"} onClick={handleOpenUpdate}>Edit Role</button>\r\n          </div>\r\n          { create && <div className=\"create_section\">\r\n                    <div className=\"add_role\">\r\n                        <input type=\"text\" placeholder='Create Role' onChange={(e)=>setCreateRole(e.target.value)} />\r\n                    </div>\r\n                    <div className=\"add_permissions\">\r\n                        <div className=\"list_of_permissions\">\r\n                              <table border={1}>\r\n                                <tbody>\r\n                                    <tr className=\"column_name\"> \r\n                                        <th>Permissions</th>\r\n                                    </tr>\r\n                                      {permissions && permissions?.map((item,index)=>(\r\n                                        <tr className={`column_value ${selectedPermissions.includes(item) ? 'selected' : ''}`} key={index} onClick={() => handleAddPermission(item)}>\r\n                                            <th>{item?.name}</th>\r\n                                        </tr>\r\n                                     ))}\r\n                                </tbody>\r\n                              </table>\r\n                        </div>\r\n                        <div className=\"added_list_of_permissions\">\r\n                        <table border={1}>\r\n                                <tbody>\r\n                                    <tr className=\"column_name\">\r\n                                        <th > Added Permissions</th>\r\n                                    </tr>\r\n                                    {selectedPermissions && selectedPermissions.map((item,index)=>(\r\n                                      <tr className=\"column_value\">\r\n                                        <th>{item?.name}</th>\r\n                                      </tr>\r\n                                    ))}\r\n                                   \r\n                                </tbody>\r\n                              </table>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button_\">\r\n                        <button onClick={handleCreateRole}>Add role</button>\r\n                    </div>\r\n                </div>\r\n          }\r\n          {update &&  <UpdateRole/> }\r\n\r\n        \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoleManagement;\r\n"],"names":["roles","useSelector","state","RoleAndPermissionReducer","permissions","dispatch","useDispatch","create","setCreate","useState","update","setUpdate","createRole","setCreateRole","selectedRole","setSelectedRole","selectedPermissions","setSelectedPermissions","useEffect","getListofRoles","getListOfPermissions","_jsx","className","children","_jsxs","border","map","item","index","name","onClick","handleOpenCreate","handleOpenUpdate","type","placeholder","onChange","e","target","value","concat","includes","handleAddPermission","permission","filter","async","preventDefault","ids","entry","id","_response$data","response","axiosWithAuth","post","console","log","data","success","toast","error","UpdateRole"],"sourceRoot":""}